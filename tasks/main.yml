---

- name: Make sure sudoers.d dir is available
  file:
    path: "{{ sudo_sudoersd_dir }}"
    state: directory
    owner: "{{ sudo_sudoersd_owner }}"
    group: "{{ sudo_sudoersd_group }}"
    mode: 0750

- name: Restore default sudoers file
  copy:
    backup: yes
    src: "{{ sudo_default_sudoers_src_path }}"
    dest: '/etc/sudoers'
    owner: "{{ sudo_sudoersd_owner }}"
    group: "{{ sudo_sudoersd_group }}"
    mode: 0440
    validate: visudo -cf %s
  when: sudo_default_sudoers|bool

- name: Enable sudoers.d
  lineinfile:
    backup: yes
    create: yes
    dest: '/etc/sudoers'
    line: "#includedir {{ sudo_sudoersd_dir }}"
    regexp: '^#includedir .*'
    validate: visudo -cf %s

- name: Gather existing sudoers.d files.
  find:
    paths: "{{ sudo_sudoersd_dir }}"
    patterns: "*"
  register: existing_sudoers_files

- name: Apply sudoers defaults configuration
  template:
    src: 'etc-sudoers.d-defaults_template.j2'
    dest: "{{ sudo_sudoersd_dir }}/00defaults"
    owner: "{{ sudo_sudoersd_owner }}"
    group: "{{ sudo_sudoersd_group }}"
    mode: 0440
    validate: visudo -cf %s
  when: sudo_defaults|length > 0

- name: Apply sudoers aliases configuration
  template:
    src: 'etc-sudoers.d-aliases_template.j2'
    dest: "{{ sudo_sudoersd_dir }}/10aliases"
    owner: "{{ sudo_sudoersd_owner }}"
    group: "{{ sudo_sudoersd_group }}"
    mode: 0440
    validate: visudo -cf %s
  when: ( (sudo_host_aliases|length > 0) or
          (sudo_user_aliases|length > 0) or
          (sudo_runas_aliases|length > 0) or
          (sudo_cmnd_aliases|length > 0) )

- name: Apply sudoers group configuration
  template:
    src: 'etc-sudoers.d-group_template.j2'
    dest: "{{ sudo_sudoersd_dir }}/{{ item.sudoers_file|default('10' + item.name) }}"
    owner: "{{ sudo_sudoersd_owner }}"
    group: "{{ sudo_sudoersd_group }}"
    mode: 0440
    validate: visudo -cf %s
  when:
    - item.sudo is defined
    - (item.state | default('present')) != "absent"
  loop: "{{ sudo_grouplist_all }}"

- name: List sudoers group configuration
  vars:
    file_path: "{{ sudo_sudoersd_dir }}/{{ item.sudoers_file|default('10' + item.name) }}"
  set_fact:
    generated_files: "{{ generated_files|default([]) + [file_path] }}"
  when:
    - item.sudo is defined
    - (item.state | default('present')) != "absent"
  loop: "{{ sudo_grouplist_all }}"

- name: Cleanup sudoers configuration for absent groups
  file:
    path: "{{ sudo_sudoersd_dir }}/{{ item.sudoers_file|default('10' + item.name) }}"
    state: absent
  when:
    - (item.state | default('present')) == "absent"
  loop: "{{ sudo_grouplist_all }}"

- name: Apply sudoers user configuration
  template:
    src: 'etc-sudoers.d-user_template.j2'
    dest: "{{ sudo_sudoersd_dir }}/{{ item.sudoers_file|default('20' + item.name) }}"
    owner: "{{ sudo_sudoersd_owner }}"
    group: "{{ sudo_sudoersd_group }}"
    mode: 0440
    validate: visudo -cf %s
  when:
    - item.sudo is defined
    - (item.state | default('present')) != "absent"
  loop: "{{ sudo_list_all }}"

- name: List sudoers user configuration
  vars:
    file_path: "{{ sudo_sudoersd_dir }}/{{ item.sudoers_file|default('20' + item.name) }}"
  set_fact:
    generated_files: "{{ generated_files|default([]) + [file_path] }}"
  when:
    - item.sudo is defined
    - (item.state | default('present')) != "absent"
  loop: "{{ sudo_list_all }}"

- name: Cleanup sudoers configuration for absent users
  file:
    path: "{{ sudo_sudoersd_dir }}/{{ item.sudoers_file|default('20' + item.name) }}"
    state: absent
  when:
    - (item.state | default('present')) == "absent"
  loop: "{{ sudo_list_all }}"

- name: Remove existing sudoers.d files if required
  file:
    path: "{{ item.path }}"
    state: absent
  when:
    - sudo_clear_existing|bool
    - item.path not in generated_files
  loop: "{{ existing_sudoers_files.files }}"

- name: Debug output of generated files
  debug: var=generated_files

- name: Debug output of existing files
  debug: var=existing_sudoers_files.files
